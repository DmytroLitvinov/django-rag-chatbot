[project]
name = "django-rag-chatbot"
version = "0.1.0"
description = "Django RAG Chatbot"
authors = []
requires-python = ">=3.13,<4"
readme = "README.md"
classifiers = ["Private :: Do not Upload"]
dependencies = [
    "django[argon2]>=5.2,<5.3",
    "django-split-settings~=1.3",
    "django-axes~=8.0",
    "django-csp~=4.0",
    "django-health-check~=3.18",
    "django-permissions-policy~=4.27",
    "django-stubs-ext~=5.1",
    "psycopg~=3.2",
    "gunicorn~=23.0",
    "python-decouple~=3.8",
    "structlog~=25.4",
    "wheel>=0.45,<0.46",
    "httpx>=0.28.1,<0.29",
    "markdown~=3.9",
    "django-currentuser>=0.9.0,<0.10",
    "django-extensions~=4.1",
    "django-model-utils>=5.0.0,<6",
    "django-simple-history>=3.10.1,<4",
    "django-concurrency~=2.7",
    "django-lifecycle>=1.2.4,<2",
    "django-allauth>=65.11.2,<66",
    "pgvector>=0.4.1,<0.5",
    "django-allauth-ui>=1.8.1,<2",
    "django-widget-tweaks>=1.5.0,<2",
    "django-braces>=1.17.0,<2",
    "openai>=1.109.1,<2",
    "django-tasks>=0.8.1,<0.9",
    "django-ai-assistant>=0.1.2,<0.2",
    "langchain-community>=0.3.30,<0.4",
    "pymupdf>=1.26.4,<2",
    "django-watchfiles>=1.4.0,<2",
    "django-browser-reload>=1.21.0,<2",
    "pypdf>=6.1.1",
]

[dependency-groups]
dev = [
    "django-debug-toolbar~=6.0",
    "django-migration-linter~=5.1",
    "django-extra-checks>=0.16,<0.17",
    "django-query-counter>=0.4,<0.5",
    "django-zeal~=2.0",
    "django-drifter>=0.1,<0.2",
    "wemake-python-styleguide~=1.4",
    "ruff>=0.13,<0.14",
    "doc8~=2.0",
    "pytest~=8.3",
    "pytest-django~=4.9",
    "pytest-cov~=7.0",
    "covdefaults~=2.3",
    "django-coverage-plugin~=3.1",
    "pytest-randomly~=4.0",
    "pytest-timeout~=2.3",
    "django-test-migrations~=1.5",
    "hypothesis~=6.123",
    "django-stubs[compatible-mypy]>=5.2,<5.3",
    "djlint~=1.36",
    "yamllint~=1.35",
    "safety~=3.6",
    "dotenv-linter>=0.7,<0.8",
    "polint>=0.5,<0.6",
    "dennis~=1.1",
    "dump-env~=1.5",
    "ipython~=9.5",
]
docs = [
    "sphinx~=8.1",
    "sphinx-autodoc-typehints~=3.0",
    "tomli~=2.2",
    "myst-parser~=4.0",
    "furo~=2024.8",
]

[tool.uv]
package = false
default-groups = [
    "dev",
    "docs",
]

[tool.djlint]
ignore = "T003,H006,H030,H031"
include = "H017,H035"
indent = 2
blank_line_after_tag = "load,extends"
profile = "django"
max_line_length = 80
format_attribute_template_tags = true

[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py312"
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FA",   # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "A005",   # allow to shadow stdlib and builtin module names
  "COM812", # trailing comma, conflicts with `ruff format`
  # Different doc rules that we don't really care about:
  "D100",
  "D101",  # missing docstring in public class
  "D102", # missing docstring in public method
  "D104",
  "D105",
  "D106",
  "D203",
  "D212",
  "D401",
  "D404",
  "D405",
  "ISC001",  # implicit string concat conflicts with `ruff format`
  "ISC003",  # prefer explicit string concat over implicit concat
  "PLR09",   # we have our own complexity rules
  "PLR2004", # do not report magic numbers
  "PLR6301", # do not require classmethod / staticmethod when self not used
  "TRY003",  # long exception messages from `tryceratops`
]
external = [ "WPS" ]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"  # When using the formatter, only "double" is compatible, as the formatter enforces double quotes for docstrings strings.
inline-quotes = "single"  # When using the formatter, ensure that `format.quote-style` is set to the same preferred quote style.
multiline-quotes = "double"  # When using the formatter, only "double" is compatible, as the formatter enforces double quotes for multiline strings.

[tool.ruff.lint.mccabe]
max-complexity = 18  # TODO: decrease to 6

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"server/apps/*/migrations/*.py" = ["D101", "E501", "RUF012"]
"server/common/typing/*.py" = ["F401"]
"tests/*.py" = ["S101"]
